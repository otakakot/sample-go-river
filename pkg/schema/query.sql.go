// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: query.sql

package schema

import (
	"context"

	"github.com/google/uuid"
)

const findUserByID = `-- name: FindUserByID :one
SELECT
    id, email
FROM
    users
WHERE
    id = $1
`

func (q *Queries) FindUserByID(ctx context.Context, id uuid.UUID) (User, error) {
	row := q.db.QueryRow(ctx, findUserByID, id)
	var i User
	err := row.Scan(&i.ID, &i.Email)
	return i, err
}

const insertUser = `-- name: InsertUser :one
INSERT INTO users (
    email
) VALUES ($1) RETURNING id, email
`

func (q *Queries) InsertUser(ctx context.Context, email string) (User, error) {
	row := q.db.QueryRow(ctx, insertUser, email)
	var i User
	err := row.Scan(&i.ID, &i.Email)
	return i, err
}
